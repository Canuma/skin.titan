<?xml version="1.0" encoding="utf-8"?>
<includes>
    <variable name="changeWidgetLabel">
        <value condition="!IsEmpty(Container(510).ListItem.Property(similartitle))">$INFO[Container(510).ListItem.Property(similartitle),$LOCALIZE[31545] ]</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-1)">$INFO[Container(300).ListItem.Property(widgetName.1)]</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-2)">$INFO[Container(300).ListItem.Property(widgetName.2)]</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-3)">$INFO[Container(300).ListItem.Property(widgetName.3)]</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-4)">$INFO[Container(300).ListItem.Property(widgetName.4)]</value>
        <value>$INFO[Container(300).ListItem.Property(widgetName)]</value>
    </variable>
    <include name="HomeMenuWidget">
        <!-- infopanel -->
        <control type="group" id="77551">
            <top>-1100</top>
            <left>0</left>
            <height>100%</height>
            <width>100%</width>
            <visible>!SubString(Control.GetLabel(17888),box) + !IsEmpty(Window(home).property(HomeFirstLoadDone))</visible>
            <visible>ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)</visible>
            <visible>!Skin.HasSetting(HideWidgetDetailsPanel)</visible>
            <animation type="Visible">
                <effect type="slide" start="0,0" end="0,1000" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Hidden">
                <effect type="slide" start="0,1000" end="0,0" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <control type="image">
                <posx>0</posx>
                <posy>-100</posy>
                <width>100%</width>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
                <height>970</height>
                <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                <visible>!StringCompare(Control.GetLabel(17888),single box)</visible>
                <animation type="Conditional" condition="StringCompare(Window.Property(widgetstyle), poster)">
                    <effect type="slide" start="0,0" end="0,130" time="0" delay="0"/>
                </animation>
            </control>
            <control type="label">
                <posx>405</posx>
                <posy>100</posy>
                <width>1465</width>
                <height>100</height>
                <font>Bold45</font>
                <align>left</align>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
                <visible>!StringCompare(Control.GetLabel(17888),single box)</visible>
            </control>
            <control type="fadelabel">
                <posx>0</posx>
                <bottom>0</bottom>
                <width>100%</width>
                <height>100</height>
                <font>Bold45</font>
                <align>center</align>
                <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                <shadowcolor>black</shadowcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel2]</label>
                <scroll>true</scroll>
                <scrollout>true</scrollout>
                <pauseatend>0</pauseatend>
                <visible>IsEmpty(Control.GetLabel(8821)) + !Skin.HasSetting(EnableTouchSupport)</visible>
                <visible>ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)</visible>
                <animation time="300" effect="fade" delay="500">Visible</animation>
                <animation time="0" effect="fade" delay="0">Hidden</animation>
            </control>
            <control type="textbox">
                <width>1455</width>
                <posx>405</posx>
                <posy>195</posy>
                <height max="300">auto</height>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <align>justify</align>
                <font>Light28</font>
            </control>
            <control type="image">
                <left>30</left>
                <posy>105</posy>
                <width>340</width>
                <height>485</height>
                <aspectratio align="left" aligny="top">keep</aspectratio>
                <fadetime>250</fadetime>
                <bordersize>20</bordersize>
                <texture background="true" diffuse="diffuse/poster.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
            </control>
            <!-- clearlogo -->
            <control type="image" id="8821">
                <posx>755</posx>
                <bottom>-90</bottom>
                <width>400</width>
                <height>160</height>
                <aspectratio align="center" aligny="bottom">keep</aspectratio>
                <texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
                <visible>Control.IsVisible(77551) + !Skin.HasSetting(EnableTouchSupport)</visible>
                <visible>ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)</visible>
                <animation time="300" effect="fade" delay="500">Visible</animation>
                <animation time="0" effect="fade" delay="0">Hidden</animation>
                <animation effect="slide" end="0,-25" time="0" condition="skin.hastheme(classic)">Conditional</animation>
                <visible>!Skin.String(widgetstyle, poster)</visible>
            </control>
            <control type="image">
                <posx>755</posx>
                <bottom>-90</bottom>
                <width>400</width>
                <height>110</height>
                <aspectratio align="center" aligny="bottom">keep</aspectratio>
                <texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
                <visible>Control.IsVisible(77551) + !Skin.HasSetting(EnableTouchSupport)</visible>
                <visible>ControlGroup(77777).HasFocus | StringCompare(Window(Home).Property(ShowWidget),show) | Control.HasFocus(511)</visible>
                <animation time="300" effect="fade" delay="500">Visible</animation>
                <animation time="0" effect="fade" delay="0">Hidden</animation>
                <animation effect="slide" end="0,-25" time="0" condition="skin.hastheme(classic)">Conditional</animation>
                <visible>Skin.String(widgetstyle, poster)</visible>
            </control>
            <!-- flags -->
            <control type="group">
                <height>60</height>
                <posx>405</posx>
                <posy>535</posy>
                <include>mediaflags</include>
                <visible>!StringCompare(Container(300).ListItem.Property(widgetTarget),music)</visible>
            </control>
        </control>
        <!-- widgets -->
        <control type="group" id="77777">
            <visible>!IsEmpty(Container(300).ListItem.Property(widget)) + !IsEmpty(Window(home).property(HomeFirstLoadDone))</visible>
            <visible>![SubString(Window(Home).Property(submenu),show) + Skin.String(SubmenuLayout, subpage)]</visible>
            <!--change widget button -->
            <control type="group">
                <right>60</right>
                <width>800</width>
                <height>60</height>
                <top>430</top>
                <include>changeWidgetButton</include>
                <visible allowhiddenfocus="true">Control.IsVisible(77551) | StringCompare(Window(Home).Property(ShowWidget),show)</visible>
            </control>
            <!-- hide to top when no focus on widget and autoshow widget disabled -->
            <animation type="Conditional" condition="!Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show)">
                <effect type="slide" start="0,0" end="0,-1000" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- show widget at default position if widget focused -->
            <animation type="Conditional" condition="!Skin.HasSetting(AutoShowWidgets) + StringCompare(Window(Home).Property(ShowWidget),show)">
                <effect type="slide" start="0,-1000" end="0,0" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- show widget at top of screen - when titan tiles - not lowered -->
            <animation type="Conditional" condition="Skin.HasSetting(AutoShowWidgets) + !Skin.HasSetting(LowerWidgets) + [SubString(Skin.String(HomeLayout), 1) | SubString(Skin.String(HomeLayout), 2)] + !Control.IsVisible(77551)">
                <effect type="slide" start="0,0" end="0,-350" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- show widget at top of screen - when titan tiles - lowered -->
            <animation type="Conditional" condition="Skin.HasSetting(AutoShowWidgets) + Skin.HasSetting(LowerWidgets) + [SubString(Skin.String(HomeLayout), 1) | SubString(Skin.String(HomeLayout), 2)] + !Control.IsVisible(77551) + !StringCompare(Control.GetLabel(17888),poster)">
                <effect type="slide" start="0,0" end="0,-150" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="Skin.HasSetting(AutoShowWidgets) + Skin.HasSetting(LowerWidgets) + [SubString(Skin.String(HomeLayout), 1) | SubString(Skin.String(HomeLayout), 2)] + !Control.IsVisible(77551) + StringCompare(Control.GetLabel(17888),poster)">
                <effect type="slide" start="0,0" end="0,-250" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- show widget above tiles for single and wide box widgets (titan tiles home) -->
            <animation type="Conditional" condition="[SubString(Skin.String(HomeLayout), 1) | SubString(Skin.String(HomeLayout), 2)] + SubString(Control.GetLabel(17888),box)">
                <effect type="slide" start="0,0" end="0,-270" time="0" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- slide widget up for poster widget on hor.home non focused -->
            <animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),poster)">
                <effect type="slide" start="0,0" end="0,-180" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- slide box widget up for hor. home -->
            <animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + SubString(Control.GetLabel(17888),box)">
                <effect type="slide" start="0,0" end="0,-300" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <!-- show widget above menu when big horizontal home -->
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),poster)">
                <effect type="slide" start="0,0" end="0,-20" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),landscape)">
                <effect type="slide" start="0,0" end="0,150" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),small poster)">
                <effect type="slide" start="0,0" end="0,120" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),minisquare)">
                <effect type="slide" start="0,0" end="0,120" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),landscapesmall)">
                <effect type="slide" start="0,0" end="0,180" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + StringCompare(Control.GetLabel(17888),banner)">
                <effect type="slide" start="0,0" end="0,180" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + SubString(Control.GetLabel(17888),box)">
                <effect type="slide" start="0,0" end="0,-200" time="0" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Conditional" condition="SubString(Skin.String(HomeLayout), lowhorizontal) + Skin.HasSetting(AutoShowWidgets) + !StringCompare(Window(Home).Property(ShowWidget),show) + SubString(Control.GetLabel(17888),square)">
                <effect type="slide" start="0,0" end="0,100" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <include>skinshortcuts-template-widget</include>
            <include>skinshortcuts-template-widget.1</include>
            <include>skinshortcuts-template-widget.2</include>
            <include>skinshortcuts-template-widget.3</include>
            <!-- busy image while widget loading -->
            <control type="multiimage">
                <posy>500</posy>
                <right>55</right>
                <width>100</width>
                <height>100</height>
                <aspectratio>keep</aspectratio>
                <imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexture.Path)]</imagepath>
                <timeperimage>100</timeperimage>
                <colordiffuse>$INFO[Skin.String(SpinnerTexture.Color)]</colordiffuse>
                <fadetime>0</fadetime>
                <visible>!Skin.String(SkinHelper.SpinnerTexture.Path,None)</visible>
                <visible>[Control.IsVisible(510) + Container(510).IsUpdating] |  [Control.IsVisible(520) + Container(520).IsUpdating] |  [Control.IsVisible(530) + Container(530).IsUpdating] |  [Control.IsVisible(540) + Container(540).IsUpdating]</visible>
            </control>
        </control>
    </include>
    <include name="SystemInfoWidget">
        <!--systeminfo widgets -->
        <item>
            <label>$LOCALIZE[155]: </label>
            <label2>[CR]$INFO[System.UsedSpacePercent]</label2>
            <thumb>resource://resource.images.skinicons.titan/disk2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.titan/disk_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titan/settings.jpg</property>
            <property name="plot">[CR]$INFO[System.TotalSpace] • $INFO[System.UsedSpace][CR]$INFO[System.HddTemperature]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[13271]</label>
            <label2>[CR]$INFO[System.CpuUsage] • $INFO[System.CpuFrequency]</label2>
            <thumb>resource://resource.images.skinicons.titan/cpu2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.titan/cpu_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titan/cpu.jpg</property>
            <property name="plot">[CR]$LOCALIZE[401]: $INFO[System.CPUTemperature] • $LOCALIZE[13300]: $INFO[System.FanSpeed][CR]$LOCALIZE[12390]: $INFO[System.Uptime]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[31257]:</label>
            <label2>[CR]$INFO[System.Memory(used.percent)]</label2>
            <thumb>resource://resource.images.skinicons.titan/memory2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.titan/memory_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titan/memory.jpg</property>
            <property name="plot">[CR]$LOCALIZE[22012]: $INFO[System.Memory(total)] • $LOCALIZE[158]: $INFO[System.Memory(free)]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[1006]:</label>
            <label2>[CR]$INFO[Network.IPAddress]</label2>
            <thumb>resource://resource.images.skinicons.titan/network2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.titan/network_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titan/networking.jpg</property>
            <property name="plot">$INFO[Network.LinkState][CR]$LOCALIZE[443]: $INFO[System.InternetState]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[131]:</label>
            <label2>[CR]$INFO[System.ScreenWidth]x$INFO[System.ScreenHeight]</label2>
            <thumb>resource://resource.images.skinicons.titan/display2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.titan/display_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titan/display.jpg</property>
            <property name="plot">[CR]$INFO[System.ScreenResolution]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
    </include>
    <include name="WeatherWidget">
        <!--weather widgets -->
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day0.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day0.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day0.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day0]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day0]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day0.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day1.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day1.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day1.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day1]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day1]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day1.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day2.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day2.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day2.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day2]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day2]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day2.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day3.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day3.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day3.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day3]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day3]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day3.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day4.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day4.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day4.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day4]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day4]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day4.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day5.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day5.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day5.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day5]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day5]</thumb>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day5.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
            <property name="DBTYPE">weather</property>
            <visible>!IsEmpty(Window(Weather).Property(Day5.Title))</visible>
            <visible>![Skin.String(widgetstyle, poster) + SubString(Skin.String(HomeLayout),ver)]</visible>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day6.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day6.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day6.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day6]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day6]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day6.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
            <visible>!IsEmpty(Window(Weather).Property(Day6.Title))</visible>
            <visible>![Skin.String(widgetstyle, poster) + SubString(Skin.String(HomeLayout),ver)]</visible>
        </item>
    </include>
    <include name="RCBWidget">
        <!--rom collection browser -->
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.1.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.1.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.1.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.1.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.1.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.1.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.2.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.2.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.2.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.2.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.2.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.2.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.3.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.3.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.3.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.3.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.3.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.3.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.4.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.4.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.4.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.4.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.4.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.4.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.5.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.5.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.5.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.5.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.5.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.5.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.6.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.6.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.6.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.6.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.6.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.6.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.7.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.7.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.7.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.7.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.7.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.7.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.8.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.8.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.8.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.8.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.8.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.8.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.9.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.9.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.9.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.9.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.9.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.9.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.10.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.10.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.10.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.10.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.10.LaunchCommand)]</onclick>
            <visible>!IsEmpty(Window(Home).Property(MostPlayedROM.10.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
    </include>
    <variable name="HomeMenuWidgetInfoLabel">
        <value condition="SubString(Container(300).ListItem.Property(widgetPath), plugin.video.youtube) + !IsEmpty(ListItem.Label2)">[B]$INFO[ListItem.label][CR]$INFO[ListItem.label2][/B]</value>
        <value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(ListItem.Property(type),livechannel)">[B]$INFO[ListItem.Property(title)][/B]</value>
        <value condition="StringCompare(Container(300).ListItem.Property(widget), smart-pvr) + StringCompare(ListItem.Property(type),recorded)">[B]$INFO[ListItem.label][/B]</value>
        <value condition="StringCompare(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="!IsEmpty(ListItem.Title) + SubString(ListItem.FolderPath, pvr://)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="!IsEmpty(ListItem.Season) + !IsEmpty(ListItem.Episode) + !StringCompare(ListItem.TvShowTitle,ListItem.Title)">[B][UPPERCASE]S$INFO[ListItem.Season]E$INFO[ListItem.Episode]:[/UPPERCASE] $INFO[ListItem.Title][/B]</value>
        <value condition="!IsEmpty(ListItem.Title)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="!IsEmpty(ListItem.Label)">[B]$INFO[ListItem.Label][/B]</value>
        <!--widgets -->
        <value condition="SubString(Container(300).ListItem.Property(widgetPath), plugin.video.youtube)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.label)][CR]$INFO[Window(Home).Property(SkinHelper.ListItem.label2)][/B]</value>
        <value condition="StringCompare(Window(Home).Property(SkinHelper.ListItem.DBTYPE), systeminfo)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.label)][/B] $INFO[Window(Home).Property(SkinHelper.ListItem.label2)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Title)) + SubString(Window(Home).Property(SkinHelper.ListItem.FolderPath), pvr://)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Season)) + !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Episode))">[B][UPPERCASE]S$INFO[Window(Home).Property(SkinHelper.ListItem.Season)]E$INFO[Window(Home).Property(SkinHelper.ListItem.Episode)]:[/UPPERCASE] $INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Title))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Label))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label)][/B]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoLabel2">
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tagline))">$INFO[Window(Home).Property(SkinHelper.ListItem.Tagline)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.TvShowTitle))">$INFO[Window(Home).Property(SkinHelper.ListItem.TvShowTitle)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist))">$INFO[Window(Home).Property(SkinHelper.ListItem.Artist)]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoclearlogo">
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(tvshow.clearlogo)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(tvshow.clearlogo))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(clearlogo)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(clearlogo))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.ClearLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ClearLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.ClearLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.Art.ClearLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
    </variable>
    <variable name="SpotLightWidgetInfoclearlogo">
        <value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
    </variable>
    <variable name="SpotLightWidgetInfoThumb">
        <value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
        <value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(tvshow.clearlogo)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(tvshow.clearlogo))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(clearlogo)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(clearlogo))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(landscape)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(landscape))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(tvshow.landscape)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(tvshow.landscape))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(poster)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(poster))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art(tvshow.poster)))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art(tvshow.poster))]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.ClearLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ClearLogo)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Icon))">$INFO[Window(Home).Property(SkinHelper.ListItem.Icon)]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoPlot">
        <!-- spotlight widget (inside container) -->
        <value condition="!IsEmpty(ListItem.PlotOutline) + Skin.HasSetting(WidgetsPreferPlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="!IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
        <value condition="!IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
        <value condition="!IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
        <value condition="!IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
        <value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.Plot))">$INFO[Window(home).Property(SkinHelper.ListItem.Plot)]</value>
        <!-- normal widgets info -->
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline)">$INFO[Window(Home).Property(SkinHelper.ListItem.PlotOutline)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot))">$INFO[Window(Home).Property(SkinHelper.ListItem.Plot)]$INFO[Window(Home).Property(SkinHelper.ListItem.label2),[CR]]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Album_Description))">$INFO[Window(Home).Property(SkinHelper.ListItem.Album_Description)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist_Description))">$INFO[Window(Home).Property(SkinHelper.ListItem.Artist_Description)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureDesc))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureDesc)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureComment))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureComment)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureKeywords))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureKeywords)]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoPlotAlt">
        <!-- spotlight widget -->
        <value condition="!IsEmpty(ListItem.TvShowTitle)">[B]$INFO[ListItem.TvShowTitle]$INFO[ListItem.Year, • ]$INFO[ListItem.Premiered, • ]$INFO[ListItem.Genre, • ]$INFO[ListItem.Duration, • ,min.][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(ListItem.Artist) + !IsEmpty(ListItem.Album)">[B]$INFO[ListItem.Artist]$INFO[ListItem.Album, • ]$INFO[ListItem.Duration, • ][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(ListItem.Year)">[B]$INFO[ListItem.Year]$INFO[ListItem.Duration, • ,min.]$INFO[ListItem.Genre, • ][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(ListItem.Property(StartDateTime))">[B]$INFO[ListItem.Channel,, • ]$INFO[ListItem.Property(StartDateTime),, • ]$INFO[ListItem.Duration,, min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(ListItem.Property(DateTime)) + !IsEmpty(ListItem.Label2)">[B]$INFO[ListItem.Label2,, • ]$INFO[ListItem.Property(DateTime),, • ]$INFO[ListItem.Duration,, min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(ListItem.StartTime)">[B]$INFO[ListItem.Label,, • ]$INFO[ListItem.StartTime,, • ]$INFO[ListItem.Duration,, min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- normal widgets -->
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.TvShowTitle))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.TvShowTitle),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Year),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Premiered),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Year))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Year),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist)) + !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Album))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Artist),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Album),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.StartDateTime))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.StartDateTime),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Property(DateTime))) + !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Label2))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label2),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Property(DateTime)),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.StartTime))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.StartTime),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value>$VAR[HomeMenuWidgetInfoPlot]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoPoster">
        <!-- animated poster if exists-->
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value>
        <!-- use episode thumb for episode widgets if widget style is poster -->
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + SubString(Window.Property(widgetstyle),poster) + SubString(Window(Home).Property(SkinHelper.ListItem.dbtype),episode)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <!-- use thumb for if widget style is square -->
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + SubString(Window.Property(widgetstyle),square)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <!-- use poster image if widget style is landscaped-->
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Poster)) + SubString(Window.Property(widgetstyle),landscape)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Poster)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <value condition="!IsEmpty(Window(Home).Property(SkinHelper.ListItem.Icon))">$INFO[Window(Home).Property(SkinHelper.ListItem.Icon)]</value>
    </variable>
    <include name="WidgetTagOverlayEnable">
        <visible>true</visible>
    </include>
    <include name="WidgetTagOverlayDisable">
        <visible>false</visible>
    </include>
    <include name="WidgetTagOverlayAuto">
        <include>$PARAM[prefix]TagOverlayVisibility</include>
    </include>
    <include name="widgetlayout">
        <include name="widget_layout_poster" content="widget_layout_poster" condition="Skin.String(widgetstyle, poster)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_landscape" content="widget_layout_landscape" condition="Skin.String(widgetstyle, landscape)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_landscapesmall" content="widget_layout_landscape" condition="Skin.String(widgetstyle, landscapesmall)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_singlebox" content="widget_layout_singlebox" condition="Skin.String(widgetstyle, single box)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_widebox" content="widget_layout_widebox" condition="Skin.String(widgetstyle, wide box)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_small_poster" content="widget_layout_small_poster" condition="Skin.String(widgetstyle, small poster)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_square" content="widget_layout_square" condition="Skin.String(widgetstyle, square)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_minisquare" content="widget_layout_minisquare" condition="Skin.String(widgetstyle, minisquare)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_layout_banner" content="widget_layout_banner" condition="Skin.String(widgetstyle, banner)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
    </include>
    <include name="widgetlayout_large">
        <include name="widget_largelayout_poster" content="widget_largelayout_poster" condition="Skin.String(widgetstyle, poster)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_landscape" content="widget_largelayout_landscape" condition="Skin.String(widgetstyle, landscape)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_landscapesmall" content="widget_largelayout_landscape" condition="Skin.String(widgetstyle, landscapesmall)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_singlebox" content="widget_largelayout_singlebox" condition="Skin.String(widgetstyle, single box)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_widebox" content="widget_largelayout_widebox" condition="Skin.String(widgetstyle, wide box)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_small_poster" content="widget_largelayout_small_poster" condition="Skin.String(widgetstyle, small poster)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_square" content="widget_largelayout_square" condition="Skin.String(widgetstyle, square)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_minisquare" content="widget_largelayout_minisquare" condition="Skin.String(widgetstyle, minisquare)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
        <include name="widget_largelayout_banner" content="widget_largelayout_banner" condition="Skin.String(widgetstyle, banner)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="multiprefix" value="$PARAM[multiprefix]"/>
            <param name="widgetLabelVisibility" value="$PARAM[widgetLabelVisibility]"/>
        </include>
    </include>
    <!-- widget poster layout -->
    <include name="widget_layout_poster">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_poster$PARAM[multiprefix]" content="widget_layout_vertical_poster$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)">widget_layout_horizontal_poster</include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="261" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) +  !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="380" width="261">
            <control type="group">
                <width>250</width>
                <height>370</height>
                <include>PosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">PosterTagOverlay</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="380" width="261">
            <control type="group">
                <width>250</width>
                <height>370</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>PosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">PosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="poster"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_poster">
        <right>40</right>
        <width>1305</width>
        <height>760</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,380" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,5) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_poster_multi">
        <right>41</right>
        <width>1305</width>
        <height>380</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <include name="widget_layout_horizontal_poster">
        <posx>50</posx>
        <posy>500</posy>
        <width>1827</width>
        <height>380</height>
        <itemgap>5</itemgap>
        <orientation>horizontal</orientation>
        <ondown condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
    </include>
    <!-- widget poster layout LARGE -->
    <include name="widget_largelayout_poster">
        <include name="widget_largelayout_vertical_poster$PARAM[multiprefix]" content="widget_largelayout_vertical_poster$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="333" width="240">
            <control type="group">
                <width>240</width>
                <height>333</height>
                <include>PosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">PosterTagOverlay</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="333" width="240">
            <control type="group">
                <width>240</width>
                <height>333</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>PosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">PosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="poster"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_poster">
        <right>50</right>
        <width>1440</width>
        <height>999</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,333" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,12) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,333" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,6) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_poster_multi">
        <right>50</right>
        <width>1440</width>
        <height>333</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget small poster layout -->
    <include name="widget_layout_small_poster">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_small_poster$PARAM[multiprefix]" content="widget_layout_vertical_small_poster$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)">widget_layout_horizontal_small_poster</include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,9) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,8) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,7) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="253" width="182" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SmallPosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="253" width="182" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SmallPosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SmallPosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="smallposter"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        <itemlayout height="253" width="162" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SmallPosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="253" width="162" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayoutFocus</include>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SmallPosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="smallposter"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_small_poster">
        <right>51</right>
        <width>1296</width>
        <height>759</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,253" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,14) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,253" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,7) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_small_poster_multi">
        <right>51</right>
        <width>1296</width>
        <height>253</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <include name="widget_layout_horizontal_small_poster">
        <posx>65</posx>
        <posy>480</posy>
        <width>1820</width>
        <height>253</height>
        <orientation>horizontal</orientation>
        <ondown condition="!Skin.String(HomeLayout, netflix)  + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
    </include>
    <!-- widget small poster layout LARGE -->
    <include name="widget_largelayout_small_poster">
        <include name="widget_largelayout_vertical_small_poster$PARAM[multiprefix]" content="widget_largelayout_vertical_small_poster$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)">widget_layout_horizontal_small_poster</include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="145" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="240" width="145">
            <control type="group">
                <width>145</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SmallPosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="240" width="145">
            <control type="group">
                <width>145</width>
                <height>240</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SmallPosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SmallPosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">PosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="smallposter"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_small_poster">
        <right>45</right>
        <width>1450</width>
        <height>960</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,240" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,30) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,240" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,240" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_small_poster_multi">
        <right>45</right>
        <width>1450</width>
        <height>240</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget square layout -->
    <include name="widget_layout_square">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_square$PARAM[multiprefix]" content="widget_layout_vertical_square$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)">widget_layout_horizontal_square</include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="263" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="263" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="263" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) +  !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="263" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="263" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="263" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="263" width="263">
            <control type="group">
                <width>240</width>
                <height>240</height>
                <include>SquarePosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SquarePosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">SquarePosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="263" width="263">
            <control type="group">
                <width>240</width>
                <height>240</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SquarePosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SquarePosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">SquarePosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="square"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_square">
        <right>27</right>
        <width>1315</width>
        <height>789</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,263" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,263" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,5) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_square_multi">
        <right>27</right>
        <width>1315</width>
        <height>245</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <include name="widget_layout_horizontal_square">
        <posx>50</posx>
        <posy>500</posy>
        <width>1841</width>
        <height>245</height>
        <ondown condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
        <animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + !StringCompare(Window(Home).Property(ShowWidget),show)">
            <effect type="slide" start="0,0" end="0,-40" time="300" tween="cubic" easing="inout" delay="0"/>
        </animation>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget square layout LARGE-->
    <include name="widget_largelayout_square">
        <include name="widget_largelayout_vertical_square$PARAM[multiprefix]" content="widget_largelayout_vertical_square$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="240" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="240" width="240">
            <control type="group">
                <width>240</width>
                <height>240</height>
                <include>SquarePosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SquarePosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">SquarePosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="240" width="240">
            <control type="group">
                <width>240</width>
                <height>240</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SquarePosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">SquarePosterTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">SquarePosterTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="square"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_square">
        <right>50</right>
        <width>1440</width>
        <height>960</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,240" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,18) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,240" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,12) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,240" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,6) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_square_multi">
        <right>50</right>
        <width>1440</width>
        <height>245</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget minisquare layout -->
    <include name="widget_layout_minisquare">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_minisquare$PARAM[multiprefix]" content="widget_layout_vertical_minisquare$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)">widget_layout_horizontal_minisquare</include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,13) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,12) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,11) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,10) + !SubString(Skin.String(HomeLayout),ver)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="131" width="130">
            <control type="group">
                <width>120</width>
                <height>120</height>
                <include>SquarePosterPanelLayout</include>
            </control>
        </itemlayout>
        <focusedlayout height="131" width="130">
            <control type="group">
                <width>120</width>
                <height>120</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SquarePosterPanelLayoutFocus</include>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="minisquare"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_minisquare">
        <right>42</right>
        <width>1300</width>
        <height>786</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,131" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,50) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,131" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,40) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,131" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,30) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,131" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,20) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,131" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_minisquare_multi">
        <right>42</right>
        <width>1300</width>
        <height>131</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <include name="widget_layout_horizontal_minisquare">
        <posx>50</posx>
        <posy>500</posy>
        <width>1820</width>
        <height>245</height>
        <ondown condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
        <animation type="Conditional" condition="Skin.String(HomeLayout, simplehor) + !StringCompare(Window(Home).Property(ShowWidget),show)">
            <effect type="slide" start="0,0" end="0,-40" time="300" tween="cubic" easing="inout" delay="0"/>
        </animation>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget minisquare layout LARGE-->
    <include name="widget_largelayout_minisquare">
        <include name="widget_largelayout_vertical_minisquare$PARAM[multiprefix]" content="widget_largelayout_vertical_minisquare$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,10)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="131" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <itemlayout height="130" width="131">
            <control type="group">
                <width>120</width>
                <height>120</height>
                <include>SquarePosterPanelLayout</include>
            </control>
        </itemlayout>
        <focusedlayout height="130" width="131">
            <control type="group">
                <width>120</width>
                <height>120</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SquarePosterPanelLayoutFocus</include>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="minisquare"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_minisquare">
        <right>47</right>
        <width>1441</width>
        <height>930</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,130" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,66) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,130" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,55) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,130" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,44) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,130" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,33) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,130" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,22) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,130" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,11) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_minisquare_multi">
        <right>47</right>
        <width>1441</width>
        <height>130</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget landscape layout -->
    <include name="widget_layout_landscape">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_landscape$PARAM[multiprefix]" content="widget_layout_vertical_landscape$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)" name="widget_layout_horizontal_landscape" content="widget_layout_horizontal_landscape">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <itemlayout width="366" height="210" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>354</width>
                <height>200</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="366" height="210" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>354</width>
                <height>200</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscape"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        <itemlayout width="326" height="190" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>320</width>
                <height>180</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="326" height="190" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>320</width>
                <height>180</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscape"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_landscape">
        <right>45</right>
        <width>1305</width>
        <height>760</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,190" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,12) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,190" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,8) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,190" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,4) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_landscape_multi">
        <right>45</right>
        <width>1305</width>
        <height>190</height>
        <orientation>horizontal</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_horizontal_landscape">
        <posx>50</posx>
        <posy>500</posy>
        <width>1830</width>
        <height>210</height>
        <ondown condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
        <orientation>horizontal</orientation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <!-- widget landscape layout LARGE -->
    <include name="widget_largelayout_landscape">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_largelayout_vertical_landscape$PARAM[multiprefix]" content="widget_largelayout_vertical_landscape$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <itemlayout width="360" height="200">
            <control type="group">
                <width>360</width>
                <height>200</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="360" height="200">
            <control type="group">
                <width>360</width>
                <height>200</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlay</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscape"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_landscape">
        <right>52</right>
        <width>1440</width>
        <height>1000</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,200" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,16) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,200" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,12) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,200" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,8) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,200" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,4) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="360" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="360" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="360" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_landscape_multi">
        <right>52</right>
        <width>1440</width>
        <height>200</height>
        <orientation>horizontal</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
        <animation effect="slide" start="0" end="360" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="360" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="360" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <!-- widget banner layout -->
    <include name="widget_layout_banner">
        <include condition="[SubString(Skin.String(HomeLayout),ver)]" name="widget_layout_vertical_banner$PARAM[multiprefix]" content="widget_layout_vertical_banner$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)" name="widget_layout_horizontal_banner" content="widget_layout_horizontal_banner">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <itemlayout height="126" width="610" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="image">
                <texture border="5">diffuse/banner.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                <include condition="Skin.String(thumbsborder_unfocused, 0)">thumbborder_0</include>
                <include condition="Skin.String(thumbsborder_unfocused, 2)">thumbborder_2</include>
                <include condition="Skin.String(thumbsborder_unfocused, 4)">thumbborder_4</include>
                <include condition="Skin.String(thumbsborder_unfocused, 6)">thumbborder_6</include>
            </control>
            <include>BannerLayout</include>
        </itemlayout>
        <focusedlayout height="126" width="610" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <texture border="5">diffuse/banner.png</texture>
                    <colordiffuse>$INFO[Skin.String(HomeViewDetailsFocusColor)]</colordiffuse>
                    <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                    <include condition="Skin.String(thumbsborder_focused, 2)">thumbborder_2</include>
                    <include condition="Skin.String(thumbsborder_focused, 4)">thumbborder_4</include>
                    <include condition="Skin.String(thumbsborder_focused, 6)">thumbborder_6</include>
                </control>
                <include>BannerLayout</include>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="banner"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        <itemlayout height="146" width="650" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="image">
                <texture border="5">diffuse/banner.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                <include condition="Skin.String(thumbsborder_unfocused, 0)">thumbborder_0</include>
                <include condition="Skin.String(thumbsborder_unfocused, 2)">thumbborder_2</include>
                <include condition="Skin.String(thumbsborder_unfocused, 4)">thumbborder_4</include>
                <include condition="Skin.String(thumbsborder_unfocused, 6)">thumbborder_6</include>
            </control>
            <include>BannerLayout</include>
        </itemlayout>
        <focusedlayout height="146" width="650" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <texture border="5">diffuse/banner.png</texture>
                    <colordiffuse>$INFO[Skin.String(HomeViewDetailsFocusColor)]</colordiffuse>
                    <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                    <include condition="Skin.String(thumbsborder_focused, 2)">thumbborder_2</include>
                    <include condition="Skin.String(thumbsborder_focused, 4)">thumbborder_4</include>
                    <include condition="Skin.String(thumbsborder_focused, 6)">thumbborder_6</include>
                </control>
                <include>BannerLayout</include>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="banner"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_banner">
        <right>45</right>
        <width>1300</width>
        <height>730</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,146" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,8) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,146" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,6) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,146" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,4) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,146" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,2) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_banner_multi">
        <right>50</right>
        <width>1300</width>
        <height>155</height>
        <orientation>horizontal</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_horizontal_banner">
        <posx>50</posx>
        <posy>500</posy>
        <width>1830</width>
        <height>210</height>
        <ondown condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
        <orientation>horizontal</orientation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <!-- widget banner layout LARGE-->
    <include name="widget_largelayout_banner">
        <include name="widget_largelayout_vertical_banner$PARAM[multiprefix]" content="widget_largelayout_vertical_banner$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <animation effect="slide" start="0" end="720" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <include>widget_layout_general</include>
        <itemlayout height="155" width="720">
            <control type="image">
                <texture border="5">diffuse/banner.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                <include condition="Skin.String(thumbsborder_unfocused, 0)">thumbborder_0</include>
                <include condition="Skin.String(thumbsborder_unfocused, 2)">thumbborder_2</include>
                <include condition="Skin.String(thumbsborder_unfocused, 4)">thumbborder_4</include>
                <include condition="Skin.String(thumbsborder_unfocused, 6)">thumbborder_6</include>
            </control>
            <include>BannerLayout</include>
        </itemlayout>
        <focusedlayout height="155" width="720">
            <control type="group">
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <texture border="5">diffuse/banner.png</texture>
                    <colordiffuse>$INFO[Skin.String(HomeViewDetailsFocusColor)]</colordiffuse>
                    <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                    <include condition="Skin.String(thumbsborder_focused, 2)">thumbborder_2</include>
                    <include condition="Skin.String(thumbsborder_focused, 4)">thumbborder_4</include>
                    <include condition="Skin.String(thumbsborder_focused, 6)">thumbborder_6</include>
                </control>
                <include>BannerLayout</include>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="banner"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_banner">
        <right>52</right>
        <width>1440</width>
        <height>930</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,8) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,6) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,4) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,2) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_banner_multi">
        <right>52</right>
        <width>1440</width>
        <height>155</height>
        <orientation>horizontal</orientation>
        <onleft>300</onleft>
        <ondown>511</ondown>
    </include>
    <!-- widget landscapesmall layout -->
    <include name="widget_layout_landscapesmall">
        <include condition="[SubString(Skin.String(HomeLayout),ver)]" name="widget_layout_vertical_landscapesmall$PARAM[multiprefix]" content="widget_layout_vertical_landscapesmall$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)" name="widget_layout_horizontal_landscapesmall" content="widget_layout_horizontal_landscapesmall">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
        <itemlayout width="262" height="148" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlaySmall</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="262" height="148" condition="!SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlaySmall</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapesmall"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        <itemlayout width="260" height="148" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlaySmall</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="260" height="148" condition="SubString(Skin.String(HomeLayout),ver)">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlaySmall</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapesmall"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_landscapesmall">
        <right>48</right>
        <width>1300</width>
        <height>740</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,148" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,20) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,148" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,15) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,148" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,148" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,5) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_vertical_landscapesmall_multi">
        <right>48</right>
        <width>1300</width>
        <height>155</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_horizontal_landscapesmall">
        <posx>50</posx>
        <posy>500</posy>
        <width>1834</width>
        <height>148</height>
        <ondown condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix) + !Skin.String(HomeLayout, simplever) + !Skin.String(HomeLayout, simplever_tiles)">SetFocus(511)</onup>
        <orientation>horizontal</orientation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + !SubString(Skin.String(HomeLayout), netflix) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <!-- widget landscapesmall layout LARGE AREA-->
    <include name="widget_largelayout_landscapesmall">
        <include condition="[SubString(Skin.String(HomeLayout),ver)]" name="widget_largelayout_vertical_landscapesmall$PARAM[multiprefix]" content="widget_largelayout_vertical_landscapesmall$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <animation effect="slide" start="0" end="280" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="280" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="280" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="280" time="0" condition="!Skin.HasSetting(AutoWidgetAlignDisabled) + Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <include>widget_layout_general</include>
        <itemlayout width="280" height="155">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlaySmall</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="280" height="155">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!Skin.String(Widgets_DisplayTags,disable)">ThumbsTagOverlaySmall</include>
                    <include condition="Skin.String(Widgets_DisplayTags,auto)">LandscapeTagOverlayVisibility</include>
                    <include name="$PARAM[widgetLabelVisibility]" content="$PARAM[widgetLabelVisibility]" condition="Skin.String(Widgets_DisplayTags,override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapesmall"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_landscapesmall">
        <right>65</right>
        <width>1400</width>
        <height>930</height>
        <onleft>300</onleft>
        <orientation>vertical</orientation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,25) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,20) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,15) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,10) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <animation effect="slide" start="0" end="0,155" time="0" condition="Control.IsVisible($PARAM[widgetid]) + !IntegerGreaterThan(Container($PARAM[widgetid]).Numitems,5) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
    </include>
    <include name="widget_largelayout_vertical_landscapesmall_multi">
        <right>60</right>
        <width>1400</width>
        <height>155</height>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
    </include>
    <!-- widget singlebox layout -->
    <include name="widget_layout_singlebox">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_singlebox$PARAM[multiprefix]" content="widget_layout_vertical_singlebox$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)" name="widget_layout_horizontal_singlebox" content="widget_layout_horizontal_singlebox">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
    </include>
    <include name="widget_layout_vertical_singlebox">
        <width>940</width>
        <height>760</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <animation effect="slide" start="0" end="0,400" time="0" condition="Control.IsVisible($PARAM[widgetid]) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <itemlayout height="760" width="940">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="760" width="940">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="single box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <height>340</height>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include name="itemlayout_singlebox" content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_singlebox_multi">
        <width>940</width>
        <height>340</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <itemlayout height="340" width="940">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="340" width="940">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="single box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include name="itemlayout_singlebox" content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <include name="widget_layout_horizontal_singlebox">
        <width>940</width>
        <height>340</height>
        <right>55</right>
        <bottom>50</bottom>
        <ondown condition="!Skin.String(HomeLayout, netflix)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix)">SetFocus(511)</onup>
        <orientation>horizontal</orientation>
        <itemlayout height="340" width="940">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="340" width="940">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="single box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <height>340</height>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include name="itemlayout_singlebox" content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <include name="itemlayout_singlebox">
        <!-- single box widget -->
        <control type="group">
            <height>340</height>
            <control type="image">
                <bordersize>4</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>darkgrey</colordiffuse>
                <bordersize>4</bordersize>
                <visible>skin.hastheme(skindefault)</visible>
            </control>
            <!-- poster image -->
            <control type="image">
                <width>240</width>
                <height>339</height>
                <texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumbList]</texture>
                <aspectratio scalediffuse="true" aligny="top" align="left">keep</aspectratio>
                <bordersize>12</bordersize>
            </control>
            <control type="button">
                <left>251</left>
                <top>5</top>
                <width>650</width>
                <aligny>center</aligny>
                <align>left</align>
                <textoffsetx>0</textoffsetx>
                <height>50</height>
                <font>Reg30</font>
                <label>$VAR[changeWidgetLabel]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                <focusedcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</focusedcolor>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <visible>![Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]</visible>
            </control>
            <control type="image">
                <right>10</right>
                <top>12</top>
                <width>30</width>
                <height>30</height>
                <texture colordiffuse="$INFO[Skin.String(ViewDetailsTextColor)]">home/home_arrow_up.png</texture>
                <visible>![Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]</visible>
            </control>
            <control type="label">
                <left>251</left>
                <top>55</top>
                <width>650</width>
                <aligny>center</aligny>
                <height>80</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
                <animation effect="slide" end="0,-60" time="0" delay="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]">Conditional</animation>
            </control>
            <control type="textbox">
                <!--description with mediaflags present -->
                <visible>!IsEmpty(ListItem.VideoCodec)</visible>
                <left>251</left>
                <width>650</width>
                <top>132</top>
                <height>145</height>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Control.HasFocus($PARAM[widgetid]) + !Skin.HasSetting(DisablePlotAutoScroll)"/>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="Control.HasFocus($PARAM[widgetid]) + !Skin.HasSetting(DisablePlotAutoScroll)"/>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                <animation effect="slide" end="0,-60" time="0" delay="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]">Conditional</animation>
            </control>
            <control type="textbox">
                <!--description with no mediaflags -->
                <visible>IsEmpty(ListItem.VideoCodec)</visible>
                <left>251</left>
                <width>650</width>
                <top>132</top>
                <height>200</height>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Control.HasFocus($PARAM[widgetid]) + !Skin.HasSetting(DisablePlotAutoScroll)"/>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="Control.HasFocus($PARAM[widgetid]) + !Skin.HasSetting(DisablePlotAutoScroll)"/>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                <animation effect="slide" end="0,-60" time="0" delay="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]">Conditional</animation>
            </control>
            <control type="group">
                <height>36</height>
                <left>251</left>
                <bottom>10</bottom>
                <control type="label">
                    <font>flags</font>
                    <width>auto</width>
                    <height>30</height>
                    <visible>!IsEmpty(ListItem.VideoCodec)</visible>
                    <label>$VAR[VideoFileTypeVar,, • ]$VAR[VideoCodecVar,, • ]$VAR[VideoAspectVar,, • ]$VAR[VideoResolutionVar,, • ]$VAR[AudioCodecVar,, • ]$VAR[AudioChannelsVar]$VAR[AudioLanguageVar, • ]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                </control>
                <animation effect="slide" end="0,-60" time="0" delay="0" condition="[Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]">Conditional</animation>
            </control>
            <control type="group">
                <!--Watched Overlay-->
                <right>8</right>
                <top>8</top>
                <animation effect="slide" end="-2,2" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
                <include name="WatchedIndicatorLayout" content="WatchedIndicatorLayout">
                    <param name="width" value="80"/>
                    <param name="height" value="80"/>
                    <param name="font" value="indicator_normal"/>
                    <param name="labeloffsetx" value="-30"/>
                    <param name="labeloffsety" value="-4"/>
                    <param name="overlay" value="normal"/>
                    <param name="overlay_texture" value="diffuse/icon_overlay_landscape.png"/>
                </include>
            </control>
        </control>
    </include>
    <!-- widget singlebox layout LARGE-->
    <include name="widget_largelayout_singlebox">
        <include name="widget_largelayout_vertical_singlebox$PARAM[multiprefix]" content="widget_largelayout_vertical_singlebox$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include>widget_layout_general</include>
    </include>
    <include name="widget_largelayout_vertical_singlebox">
        <width>940</width>
        <height>960</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <animation effect="slide" start="0" end="0,610" time="0" condition="Control.IsVisible($PARAM[widgetid]) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <itemlayout height="960" width="940">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="960" width="940">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="single box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <height>340</height>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include name="itemlayout_singlebox" content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_singlebox_multi">
        <width>940</width>
        <height>340</height>
        <right>50</right>
        <orientation>horizontal</orientation>
        <itemlayout height="340" width="940">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="340" width="940">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="single box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include name="itemlayout_singlebox" content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <!-- widget widebox layout -->
    <include name="widget_layout_widebox">
        <include condition="SubString(Skin.String(HomeLayout),ver)" name="widget_layout_vertical_widebox$PARAM[multiprefix]" content="widget_layout_vertical_widebox$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include condition="!SubString(Skin.String(HomeLayout),ver)" name="widget_layout_horizontal_widebox" content="widget_layout_horizontal_widebox">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
    </include>
    <include name="widget_layout_vertical_widebox">
        <width>1300</width>
        <height>760</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="0,500" time="0" condition="Control.IsVisible($PARAM[widgetid]) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <itemlayout height="760" width="1300">
            <include>itemlayout_widebox</include>
        </itemlayout>
        <focusedlayout height="760" width="1300">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="wide box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <height>255</height>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include>itemlayout_widebox</include>
        </focusedlayout>
    </include>
    <include name="widget_layout_vertical_widebox_multi">
        <width>1300</width>
        <height>255</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <include>widget_layout_general</include>
        <itemlayout height="255" width="1300">
            <include>itemlayout_widebox</include>
        </itemlayout>
        <focusedlayout height="255" width="1300">
            <control type="image">
                <bordersize>0</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include>itemlayout_widebox</include>
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="wide box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <include name="widget_layout_horizontal_widebox">
        <width>1800</width>
        <height>255</height>
        <right>55</right>
        <bottom>50</bottom>
        <ondown condition="!Skin.String(HomeLayout, netflix)">300</ondown>
        <onup condition="!Skin.String(HomeLayout, netflix)">SetFocus(511)</onup>
        <orientation>horizontal</orientation>
        <include>widget_layout_general</include>
        <itemlayout height="255" width="1800">
            <include>itemlayout_widebox</include>
        </itemlayout>
        <focusedlayout height="255" width="1800">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="wide box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include>itemlayout_widebox</include>
        </focusedlayout>
    </include>
    <include name="itemlayout_widebox">
        <!-- wide box widget -->
        <control type="group">
            <height>255</height>
            <control type="image">
                <bordersize>4</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>darkgrey</colordiffuse>
                <bordersize>4</bordersize>
                <visible>skin.hastheme(skindefault)</visible>
            </control>
            <!-- poster image -->
            <control type="image">
                <width>190</width>
                <height>100%</height>
                <texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumbList]</texture>
                <aspectratio scalediffuse="true" aligny="top" align="left">keep</aspectratio>
                <bordersize>12</bordersize>
            </control>
            <control type="button">
                <right>30</right>
                <top>5</top>
                <width>650</width>
                <aligny>center</aligny>
                <align>right</align>
                <textoffsetx>0</textoffsetx>
                <height>50</height>
                <font>Reg30</font>
                <label>$VAR[changeWidgetLabel]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                <focusedcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</focusedcolor>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <visible>![Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]</visible>
                <animation effect="slide" end="-60" time="0" condition="!IsEmpty(Container(300).ListItem.Property(widget.1))">Conditional</animation>
            </control>
            <control type="image">
                <right>30</right>
                <top>15</top>
                <width>30</width>
                <height>30</height>
                <texture colordiffuse="$INFO[Skin.String(ViewDetailsTextColor)]">home/home_arrow_up.png</texture>
                <visible>!IsEmpty(Container(300).ListItem.Property(widget.1))</visible>
                <visible>![Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig) | SubString(Skin.String(HomeLayout), netflix)]</visible>
            </control>
            <control type="label">
                <left>200</left>
                <width>70%</width>
                <top>12</top>
                <aligny>top</aligny>
                <height>80</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <left>200</left>
                <right>30</right>
                <right>10</right>
                <top>60</top>
                <height>145</height>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Control.HasFocus(510) + !Skin.HasSetting(DisablePlotAutoScroll)"/>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="Control.HasFocus(510) + !Skin.HasSetting(DisablePlotAutoScroll)"/>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
            <control type="group">
                <!--Watched Overlay-->
                <right>8</right>
                <top>8</top>
                <animation effect="slide" end="-2,2" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
                <include name="WatchedIndicatorLayout" content="WatchedIndicatorLayout">
                    <param name="width" value="80"/>
                    <param name="height" value="80"/>
                    <param name="font" value="indicator_normal"/>
                    <param name="labeloffsetx" value="-30"/>
                    <param name="labeloffsety" value="-4"/>
                    <param name="overlay" value="normal"/>
                    <param name="overlay_texture" value="diffuse/icon_overlay_landscape.png"/>
                </include>
            </control>
        </control>
    </include>
    <!-- widget widebox layout LARGE-->
    <include name="widget_largelayout_widebox">
        <include name="widget_largelayout_vertical_widebox$PARAM[multiprefix]" content="widget_largelayout_vertical_widebox$PARAM[multiprefix]">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
    </include>
    <include name="widget_largelayout_vertical_widebox">
        <width>1445</width>
        <height>960</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <include>widget_layout_general</include>
        <animation effect="slide" start="0" end="0,680" time="0" condition="Control.IsVisible($PARAM[widgetid]) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + !SubString(Container(300).ListItem.Property(multiwidget),multi)">Conditional</animation>
        <itemlayout height="960" width="1445">
            <include>itemlayout_widebox</include>
        </itemlayout>
        <focusedlayout height="960" width="1445">
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="wide box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <bordersize>0</bordersize>
                <height>255</height>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include>itemlayout_widebox</include>
        </focusedlayout>
    </include>
    <include name="widget_largelayout_vertical_widebox_multi">
        <width>1445</width>
        <height>255</height>
        <right>50</right>
        <onleft>300</onleft>
        <orientation>horizontal</orientation>
        <include>widget_layout_general</include>
        <itemlayout height="255" width="1445">
            <include>itemlayout_widebox</include>
        </itemlayout>
        <focusedlayout height="255" width="1445">
            <control type="image">
                <bordersize>0</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
            </control>
            <include>itemlayout_widebox</include>
            <include name="HiddenWidgetButton" content="HiddenWidgetButton">
                <param name="widgetstyle" value="wide box"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>
    <include name="widget_layout_general">
        <animation effect="slide" start="0" end="50" time="0" condition="Skin.String(HomeLayout, netflix)">Conditional</animation>
        <ondown>ClearProperty(ShowWidget, Home)</ondown>
        <oninfo>RunScript(script.skin.helper.service,action=showinfo)</oninfo>
        <onback>300</onback>
        <onback>ClearProperty(ShowWidget, Home)</onback>
        <onfocus>Setproperty(ShowWidget,show)</onfocus>
        <onfocus>ClearProperty(submenu)</onfocus>
        <orientation>horizontal</orientation>
        <onleft condition="Skin.HasSetting(EnhancedHome_Circular) + Skin.String(HomeLayout,netflix2)">$INFO[Window(Home).Property(SkinHelper.WidgetContainer)]</onleft>
        <scrolltime tween="cubic" easing="inout">500</scrolltime>
        <animation condition="![Control.HasFocus(510) | Control.HasFocus(520) | Control.HasFocus(530) | Control.HasFocus(540)] + Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
            <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
            <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide"/>
            <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
        </animation>
        <animation time="300" effect="fade" start="0" end="100" reversible="true" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>
    </include>
    <variable name="toggleNextWidget">
        <value condition="StringCompare(Control.GetLabel(600),widget-0) + !IsEmpty(Container(300).ListItem.Property(widget.1))">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],1)</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-1) + !IsEmpty(Container(300).ListItem.Property(widget.2))">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],2)</value>
        <value condition="StringCompare(Control.GetLabel(600),widget-2) + !IsEmpty(Container(300).ListItem.Property(widget.3))">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],3)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget))">Skin.SetString(widgetvalue-$INFO[Container(300).ListItem.Property(submenuVisibility)],0)</value>
    </variable>
    <variable name="focusWidget">
        <value condition="SubString(Skin.String(HomeLayout),ver) + SubString(Container(300).ListItem.Property(multiwidget),multi)">SetFocus(77777)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget)) + StringCompare(Control.GetLabel(600),widget-0) + IntegerGreaterThan(Container(510).NumItems,0)">SetFocus(510)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.1)) + StringCompare(Control.GetLabel(600),widget-1) + IntegerGreaterThan(Container(520).NumItems,0)">SetFocus(520)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.2)) + StringCompare(Control.GetLabel(600),widget-2) + IntegerGreaterThan(Container(530).NumItems,0)">SetFocus(530)</value>
        <value condition="!IsEmpty(Container(300).ListItem.Property(widget.3)) + StringCompare(Control.GetLabel(600),widget-3) + IntegerGreaterThan(Container(540).NumItems,0)">SetFocus(540)</value>
        <value condition="!Control.HasFocus(511)">SetFocus(511)</value>
        <value>SetFocus(300)</value>
    </variable>
    <include name="changeWidgetButton">
        <include>animation_fade_visible_hidden</include>
        <control type="image">
            <colordiffuse>$INFO[Skin.String(ButtonTextColor)]</colordiffuse>
            <texture flipy="true">dialogs/default/separator.png</texture>
            <visible>!IsEmpty(Control.GetLabel(511))</visible>
            <right>0</right>
            <width>600</width>
        </control>
        <control type="image">
            <colordiffuse>$INFO[Skin.String(ButtonTextColor)]</colordiffuse>
            <texture>dialogs/default/separator.png</texture>
            <visible>!IsEmpty(Control.GetLabel(511))</visible>
            <height>45</height>
            <right>0</right>
            <width>600</width>
        </control>
        <control type="button" id="511">
            <right>0</right>
            <width>600</width>
            <height>45</height>
            <align>right</align>
            <font>Reg30</font>
            <onleft condition="SubString(Skin.String(HomeLayout),ver)">300</onleft>
            <ondown>$VAR[focusWidget]</ondown>
            <onback>300</onback>
            <onback>ClearProperty(ShowWidget, Home)</onback>
            <ondown>ClearProperty(ShowWidget, Home)</ondown>
            <textoffsetx>50</textoffsetx>
            <label>$VAR[changeWidgetLabel]</label>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <onclick>$VAR[toggleNextWidget]</onclick>
            <onup condition="!SubString(Skin.String(HomeLayout),ver)">$VAR[toggleNextWidget]</onup>
            <onup condition="SubString(Skin.String(HomeLayout),ver)">$VAR[focusWidget]</onup>
            <onfocus>SetProperty(ShowWidget,show)</onfocus>
            <onfocus>ClearProperty(SkinHelper.WidgetContainer)</onfocus>
            <texturenofocus>-</texturenofocus>
        </control>
        <control type="image">
            <right>5</right>
            <posy>8</posy>
            <width>30</width>
            <height>30</height>
            <texture colordiffuse="$INFO[Skin.String(ViewDetailsTextColor)]">home/home_arrow_up.png</texture>
        </control>
    </include>
    <!-- widget vars for widgets that do not auto refresh automatically -->
    <variable name="widget510">
        <value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
        <value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
        <value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
        <value>$INFO[Container(300).ListItem.Property(widgetPath)]</value>
    </variable>
    <variable name="widget520">
        <value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
        <value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
        <value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
        <value>$INFO[Container(300).ListItem.property(widgetPath.1)]</value>
    </variable>
    <variable name="widget530">
        <value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
        <value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
        <value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
        <value>$INFO[Container(300).ListItem.property(widgetPath.2)]</value>
    </variable>
    <variable name="widget540">
        <value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
        <value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
        <value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
        <value>$INFO[Container(300).ListItem.property(widgetPath.3)]</value>
    </variable>
    <variable name="widget1508">
        <value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
        <value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
        <value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
        <value>$INFO[Container(300).ListItem.property(widgetPath.99)]</value>
    </variable>
</includes>

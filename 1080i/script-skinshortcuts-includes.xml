<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$ADDON[script.skinshortcuts 32022]</label>
			<label2>Live TV</label2>
			<icon>resource://resource.images.skinicons.titan/livetv.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.PvrBackground)]</thumb>
			<property name="labelID">livetv</property>
			<property name="defaultID">livetv</property>
			<property name="widget">tvrecordings</property>
			<property name="widgetName">19017</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</property>
			<property name="widgetTarget">pvr</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.PvrBackground)]</property>
			<property name="backgroundName">571</property>
			<visible>System.HasPVRAddon</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">livetv</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>$LOCALIZE[342]</label>
			<label2>Movies</label2>
			<icon>resource://resource.images.skinicons.titan/titan.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</thumb>
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<property name="widget">recommendedmovies</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32029]</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32039]</property>
			<property name="widget.1">recentmovies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">20386</property>
			<property name="widget.99">randommovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>TV shows</label2>
			<icon>resource://resource.images.skinicons.titan/titan.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</thumb>
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="widget">nextepisodes</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32002]</property>
			<property name="widgetType">episodes</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32043]</property>
			<property name="widget.1">recentepisodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">20387</property>
			<property name="widget.99">randomtvshows</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">tvshows</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="widget.2">Library</property>
			<property name="widgetName.2">TV shows - Title</property>
			<property name="widgetType.2">tvshows</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">library://video/tvshows/titles.xml/</property>
			<property name="widget.3">Library</property>
			<property name="widgetName.3">TV shows - Title</property>
			<property name="widgetType.3">tvshows</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">library://video/tvshows/titles.xml/</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[10005]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<property name="widget">recentalbums</property>
			<property name="widgetName">359</property>
			<property name="widgetType">albums</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</property>
			<property name="widgetTarget">music</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32048]</property>
			<property name="widget.1">recentsongs</property>
			<property name="widgetTarget.1">music</property>
			<property name="widgetType.1">songs</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</property>
			<property name="widgetName.1">$ADDON[script.skin.helper.widgets 32012]</property>
			<property name="widgetstyle">square</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">music</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>resource://resource.images.skinbackgrounds.titan/hover_my music.jpg</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</thumb>
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<property name="widget">recentmusicvideos</property>
			<property name="widgetName">20390</property>
			<property name="widgetType">musicvideos</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32047]</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">musicvideos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Weather</label2>
			<icon>resource://resource.images.skinicons.titan/weather.png</icon>
			<thumb>$VAR[WeatherFanArtSingleImage_Current]</thumb>
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<property name="widget">weather</property>
			<property name="widgetName">8</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanArtExtension]</property>
			<visible>!IsEmpty(Weather.Plugin)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$LOCALIZE[31062]</label>
			<label2>youtube</label2>
			<icon>resource://resource.images.skinicons.titan/youtube.png</icon>
			<thumb />
			<property name="labelID">plugin.video.youtube</property>
			<property name="defaultID">plugin.video.youtube</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/hover_extensions.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,plugin://plugin.video.youtube,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://plugin.video.youtube,return)</property>
			<property name="list">plugin://plugin.video.youtube</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-video-youtube</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>$LOCALIZE[10002]</label>
			<label2>Pictures</label2>
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.PicturesBackground)]</thumb>
			<property name="labelID">pictures</property>
			<property name="defaultID">pictures</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.PicturesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32046]</property>
			<visible>!Skin.HasSetting(HomeMenuUsePlexforPictures)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(pictures,return)</onclick>
			<property name="path">ActivateWindow(pictures,return)</property>
			<property name="list">pictures</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">pictures</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>$LOCALIZE[10040]</label>
			<label2>Add-on browser</label2>
			<icon>resource://resource.images.skinicons.titan/addons.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/programs.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10040</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[10006]</label>
			<label2>Videos</label2>
			<icon>resource://resource.images.skinicons.titan/videos.png</icon>
			<thumb />
			<property name="labelID">videos</property>
			<property name="defaultID">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32038]</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,return)</onclick>
			<property name="path">ActivateWindow(Videos,return)</property>
			<property name="list">Videos</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">videos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="widget">systeminfo</property>
			<property name="widgetName">130</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/systeminfo.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/recentmovies.xsp</property>
			<onclick condition="!Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,videodb://recentlyaddedmovies/,return)</onclick>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<visible>[Skin.HasSetting(IsTitanSkin)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,special://skin/extras/widgetplaylists/inprogressmovies.xsp)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/inprogressmovies.xsp)</property>
			<property name="list">special://skin/extras/widgetplaylists/inprogressmovies.xsp</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<visible>[Skin.HasSetting(IsTitanSkin)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)</property>
			<property name="list">special://skin/extras/widgetplaylists/unwatchedmovies.xsp</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/recentepisodes.xsp</property>
			<onclick condition="!Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,videodb://recentlyaddedepisodes/,return)</onclick>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>[System.HasPVRAddon] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$LOCALIZE[20389]</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Recommended Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recommendedmedia</property>
			<property name="defaultID">recommendedmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Title</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">title</property>
			<property name="defaultID">title</property>
			<property name="translatedPath">ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<onclick>ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</property>
			<property name="list">library://video/tvshows/titles.xml/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>In-progress Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">in-progressmedia</property>
			<property name="defaultID">inprogressmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>Recent media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentmedia</property>
			<property name="defaultID">recentmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>Similar Movies</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">similarmovies</property>
			<property name="defaultID">similarmovies</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">13</property>
			<label>Favourite Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">favouritemedia</property>
			<property name="defaultID">favouritemedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">13</property>
			<label>Favourites</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">favourites</property>
			<property name="defaultID">favourites</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[342]</label>
			<label2>Video's</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(Movies)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/",return)</property>
			<property name="list">library://video/movies/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Video's</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(TVShows)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/",return)</property>
			<property name="list">library://video/tvshows/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10005]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<onclick>ActivateWindow(10502,musicdb://,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://,return)</property>
			<property name="list">musicdb://</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Container(300).ListItem.Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + StringCompare(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/recentmovies.xsp</property>
			<onclick condition="!Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,videodb://recentlyaddedmovies/,return)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<visible>Skin.HasSetting(IsTitanSkin)</visible>
			<onclick>ActivateWindow(10025,special://skin/extras/widgetplaylists/inprogressmovies.xsp)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/inprogressmovies.xsp)</property>
			<property name="list">special://skin/extras/widgetplaylists/inprogressmovies.xsp</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<visible>Skin.HasSetting(IsTitanSkin)</visible>
			<onclick>ActivateWindow(10025,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)</property>
			<property name="list">special://skin/extras/widgetplaylists/unwatchedmovies.xsp</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/recentmovies.xsp</property>
			<onclick condition="!Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,videodb://recentlyaddedmovies/,return)</onclick>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<visible>[Skin.HasSetting(IsTitanSkin)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,special://skin/extras/widgetplaylists/inprogressmovies.xsp)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/inprogressmovies.xsp)</property>
			<property name="list">special://skin/extras/widgetplaylists/inprogressmovies.xsp</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<visible>[Skin.HasSetting(IsTitanSkin)] + StringCompare(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)</property>
			<property name="list">special://skin/extras/widgetplaylists/unwatchedmovies.xsp</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/recentepisodes.xsp</property>
			<onclick condition="!Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,videodb://recentlyaddedepisodes/,return)</onclick>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</onclick>
			<property name="path">ActivateWindow(10025,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/recentepisodes.xsp</property>
			<onclick condition="!Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(10025,videodb://recentlyaddedepisodes/,return)</onclick>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$LOCALIZE[20389]</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>[System.HasPVRAddon] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$LOCALIZE[20389]</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10025,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-musicvideos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-musicvideos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-pictures">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-pictures">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-videos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-videos">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.titan/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + StringCompare(Window(10000).Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-netflixmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Recommended Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recommendedmedia</property>
			<property name="defaultID">recommendedmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Title</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">title</property>
			<property name="defaultID">title</property>
			<property name="translatedPath">ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</property>
			<property name="list">library://video/tvshows/titles.xml/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>In-progress Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">in-progressmedia</property>
			<property name="defaultID">inprogressmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>Recent media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentmedia</property>
			<property name="defaultID">recentmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>Similar Movies</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">similarmovies</property>
			<property name="defaultID">similarmovies</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">13</property>
			<label>Favourite Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">favouritemedia</property>
			<property name="defaultID">favouritemedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">13</property>
			<label>Favourites</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">favourites</property>
			<property name="defaultID">favourites</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[342]</label>
			<label2>Video's</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID" />
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/",return)</property>
			<property name="list">library://video/movies/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Video's</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID" />
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/",return)</property>
			<property name="list">library://video/tvshows/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10005]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<onclick>ActivateWindow(10502,musicdb://,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://,return)</property>
			<property name="list">musicdb://</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-netflixmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Recommended Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recommendedmedia</property>
			<property name="defaultID">recommendedmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=Recommended&amp;mediatype=Media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Title</label>
			<label2 />
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">title</property>
			<property name="defaultID">title</property>
			<property name="translatedPath">ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</property>
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<onclick>ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/tvshows/titles.xml/,return)</property>
			<property name="list">library://video/tvshows/titles.xml/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>In-progress Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">in-progressmedia</property>
			<property name="defaultID">inprogressmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>Recent media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">recentmedia</property>
			<property name="defaultID">recentmedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>Similar Movies</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">similarmovies</property>
			<property name="defaultID">similarmovies</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">13</property>
			<label>Favourite Media</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">favouritemedia</property>
			<property name="defaultID">favouritemedia</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=favourite&amp;mediatype=media&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">13</property>
			<label>Favourites</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">favourites</property>
			<property name="defaultID">favourites</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)],return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=favourites&amp;limit=100&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[342]</label>
			<label2>Video's</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(Movies)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/",return)</property>
			<property name="list">library://video/movies/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Video's</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID" />
			<visible>[Library.HasContent(TVShows)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/",return)</property>
			<property name="list">library://video/tvshows/</property>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10005]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.titan/music.png</icon>
			<thumb />
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<onclick>ActivateWindow(10502,musicdb://,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://,return)</property>
			<property name="list">musicdb://</property>
			<visible>[StringCompare(System.ProfileName,Master user)] + StringCompare(Window(10000).Property(submenuVisibility),netflixmenu)</visible>
			<property name="group">netflixmenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-widget">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-widget-Master user</include>
	</include>
	<include name="skinshortcuts-template-widget-Master user">
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="pvr">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widget_layout_square" name="widget_layout_square">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="static">
				<include>WeatherWidget</include>
			</content>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)</visible>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="static">
				<include>SystemInfoWidget</include>
			</content>
		</control>
	</include>
	<include name="skinshortcuts-template-win10widget.1">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-win10widget.1-Master user</include>
	</include>
	<include name="skinshortcuts-template-win10widget.1-Master user">
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="pvr">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</content>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="static">
				<include>WeatherWidget</include>
			</content>
		</control>
		<control id="510" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft condition="!Skin.HasSetting(Win10SubmenuRight)">4444</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + !Skin.HasSetting(EnhancedHome_Circular)">300</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">Control.Move(300,-1)</onleft>
			<onleft condition="Skin.HasSetting(Win10SubmenuRight) + Skin.HasSetting(EnhancedHome_Circular)">SetFocus(9000,0)</onleft>
			<onright>SetFocus(520,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.1)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.1))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="510" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="static">
				<include>SystemInfoWidget</include>
			</content>
		</control>
	</include>
	<include name="skinshortcuts-template-VerticalHomeWidgets">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-VerticalHomeWidgets-Master user</include>
	</include>
	<include name="skinshortcuts-template-VerticalHomeWidgets-Master user">
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>6881</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)]]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="pvr">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-livetv,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-livetv,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-livetv,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6881" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>6882</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)]]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-movies,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-movies,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-movies,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6882" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>6883</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)]]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-tvshows,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-tvshows,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">library://video/tvshows/titles.xml/</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-tvshows,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">library://video/tvshows/titles.xml/</content>
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6883" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>6884</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),music)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)]]</visible>
				<include content="widget_layout_square" name="widget_layout_square">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-music,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-music,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-music,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6884" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>6885</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)]]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-musicvideos,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-musicvideos,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-musicvideos,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6885" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>6886</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)]]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="static">
					<include>WeatherWidget</include>
				</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-weather,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-weather,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-weather,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6886" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>183</top>
			<usecontrolcoords>true</usecontrolcoords>
			<include condition="system.getbool(lookandfeel.enablerssfeeds)" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<include condition="false" content="height" name="height">
				<param name="height" value="857" />
			</include>
			<height>897</height>
			<width>1920</width>
			<onleft>300</onleft>
			<pagecontrol>68811</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,380" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,506" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,490" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,655" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,570" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,592" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,584" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,400" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,500" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,127" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,135" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,249" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,190" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,225" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,40" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)]]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="static">
					<include>SystemInfoWidget</include>
				</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-settings,1)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-settings,2)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-settings,3)]</visible>
				<include content="widgetlayout" name="widgetlayout">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="68811" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
	</include>
	<include name="skinshortcuts-template-VerticalHomeWidgetsLarge">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-VerticalHomeWidgetsLarge-Master user</include>
	</include>
	<include name="skinshortcuts-template-VerticalHomeWidgetsLarge-Master user">
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<visible>Skin.String(widgetvalue-livetv,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>6881</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)]]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="pvr">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-livetv,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-livetv,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="livetv" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-livetv,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6881" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>6882</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)]]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-movies,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-movies,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="movies" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-movies,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6882" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>6883</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)]]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-tvshows,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-tvshows,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">library://video/tvshows/titles.xml/</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="tvshows" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-tvshows,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">library://video/tvshows/titles.xml/</content>
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6883" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>6884</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),music)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-music,0) | !Skin.String(widgetvalue-music)]]</visible>
				<include content="widget_largelayout_square" name="widget_largelayout_square">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-music,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-music,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="music" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-music,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6884" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<visible>Skin.String(widgetvalue-musicvideos,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>6885</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)]]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-musicvideos,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-musicvideos,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="musicvideos" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-musicvideos,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6885" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>Skin.String(widgetvalue-weather,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>6886</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)]]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="static">
					<include>WeatherWidget</include>
				</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-weather,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-weather,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="weather" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-weather,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="6886" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),weather)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
		<control id="600" type="label">
			<label>widget-0</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,1)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,2)</visible>
		</control>
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<visible>Skin.String(widgetvalue-settings,3)</visible>
		</control>
		<control id="77777" type="grouplist">
			<right>0</right>
			<width>100%</width>
			<top>10</top>
			<height>1070</height>
			<usecontrolcoords>true</usecontrolcoords>
			<onleft>300</onleft>
			<pagecontrol>68811</pagecontrol>
			<include>animation_window_open_close</include>
			<animation condition="Skin.String(HomeLayout,verticalbig)" effect="slide" end="25" start="0" time="0">Conditional</animation>
			<animation condition="!StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)" easing="inout" effect="fade" end="0" reversible="true" start="100" time="50">Conditional</animation>
			<animation condition="StringCompare(Skin.AspectRatio,16:10)" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,630" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,740" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,850" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,770" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,820" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,640" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,730" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),single)" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="StringCompare(Container(300).ListItem.Property(squaresubmenu),enable) + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,-100" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle),poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle)) + Skin.String(widgetstyle,poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,125" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),small poster) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,small poster)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,214" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),square) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,square)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,218" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),minisquare) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,minisquare)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,325" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscape) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscape)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,255" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),landscapesmall) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,landscapesmall)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,288" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),banner) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,banner)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,293" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),single box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,single box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,120" start="0" time="0">Conditional</animation>
			<animation condition="[StringCompare(Container(300).ListItem.Property(widgetstyle.1),wide box) | [IsEmpty(Container(300).ListItem.Property(widgetstyle.1)) + Skin.String(widgetstyle,wide box)]] + StringCompare(Container(300).ListItem.Property(lowerwidgets),enable) + StringCompare(Container(300).ListItem.Property(multiwidget),multi) + !IsEmpty(Container(300).ListItem.Property(widget.1)) + IsEmpty(Container(300).ListItem.Property(widget.2))" effect="slide" end="0,203" start="0" time="0">Conditional</animation>
			<control id="4446" type="panel">
				<include>VerticalHomeSquareSubMenuLayout</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			</control>
			<control id="505" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>true</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<selected>Control.HasFocus(505)</selected>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="509" />
				<param name="containerid" value="510" />
				<param name="widgetidprefix" value="" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="510" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<ondown>510</ondown>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + [Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)]]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="510" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="static">
					<include>SystemInfoWidget</include>
				</content>
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="519" />
				<param name="containerid" value="520" />
				<param name="widgetidprefix" value=".1" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="520" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.1))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-settings,1)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="520" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="529" />
				<param name="containerid" value="530" />
				<param name="widgetidprefix" value=".2" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="530" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.2))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-settings,2)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="530" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<include condition="false" content="VerticalHomeAdvancedWidgetHeader" name="VerticalHomeAdvancedWidgetHeader">
				<param name="id" value="539" />
				<param name="containerid" value="540" />
				<param name="widgetidprefix" value=".3" />
				<param name="mainmenuid" value="settings" />
			</include>
			<control id="540" type="panel">
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<include>widgets_animation</include>
				<visible>!IsEmpty(Container(300).Listitem.Property(widget.3))</visible>
				<visible>SubString(Container(300).Listitem.Property(multiwidget),multi) | [!SubString(Container(300).Listitem.Property(multiwidget),multi) + Skin.String(widgetvalue-settings,3)]</visible>
				<include content="widgetlayout_large" name="widgetlayout_large">
					<param name="widgetid" value="540" />
					<param name="multiprefix" value="" />
					<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
				</include>
				<content target="" />
			</control>
			<control id="511" type="radiobutton">
				<include condition="!Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayout</include>
				<include condition="Skin.HasSetting(AutoWidgetAlignDisabled)">VerticalHomeSimpleWidgetHeaderLayoutAlt</include>
				<visible>false</visible>
				<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
				<selected>Control.HasFocus(511)</selected>
			</control>
		</control>
		<control id="68811" type="scrollbar">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<right>5</right>
			<bottom>0</bottom>
			<height>85%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>54</onleft>
			<animation condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)" effect="fade" end="100" start="0" time="400">Conditional</animation>
			<animation condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]" effect="fade" end="0" start="100" time="400">Conditional</animation>
		</control>
	</include>
	<include name="skinshortcuts-template-widget.1">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-widget.1-Master user</include>
	</include>
	<include name="skinshortcuts-template-widget.1-Master user">
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,1)</visible>
		</control>
		<control id="520" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>Skin.String(widgetvalue-movies,1)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,1)</visible>
		</control>
		<control id="520" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,1)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="600" type="label">
			<label>widget-1</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,1)</visible>
		</control>
		<control id="520" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<visible>Skin.String(widgetvalue-music,1)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
		</control>
	</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control id="1508" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="1508" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
	</include>
	<include name="skinshortcuts-template-win10widget.2">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-win10widget.2-Master user</include>
	</include>
	<include name="skinshortcuts-template-win10widget.2-Master user">
		<control id="520" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft>510</onleft>
			<onright>SetFocus(530,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.2)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.2))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="520" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft>510</onleft>
			<onright>SetFocus(530,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.2)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.2))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="520" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),music)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft>510</onleft>
			<onright>SetFocus(530,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.2)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.2))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="520" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="music">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</content>
		</control>
	</include>
	<include name="skinshortcuts-template-widget.2">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-widget.2-Master user</include>
	</include>
	<include name="skinshortcuts-template-widget.2-Master user">
		<control id="600" type="label">
			<label>widget-2</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,2)</visible>
		</control>
		<control id="530" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,2)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="530" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="530" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">library://video/tvshows/titles.xml/</content>
		</control>
	</include>
	<include name="skinshortcuts-template-widget.3">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-widget.3-Master user</include>
	</include>
	<include name="skinshortcuts-template-widget.3-Master user">
		<control id="600" type="label">
			<label>widget-3</label>
			<width>1</width>
			<heigth>1</heigth>
			<posx>-1</posx>
			<posy>-1</posy>
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,3)</visible>
		</control>
		<control id="540" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>Skin.String(widgetvalue-tvshows,3)</visible>
			<include condition="Skin.String(HomeLayout, enhanced)" content="EnhancedHomeWidgetLayout" name="EnhancedHomeWidgetLayout">
				<param name="widgetid" value="540" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<include condition="!Skin.String(HomeLayout, enhanced)" content="widgetlayout" name="widgetlayout">
				<param name="widgetid" value="540" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">library://video/tvshows/titles.xml/</content>
		</control>
	</include>
	<include name="skinshortcuts-template-win10widget.3">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-win10widget.3-Master user</include>
	</include>
	<include name="skinshortcuts-template-win10widget.3-Master user">
		<control id="530" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft>520</onleft>
			<onright>SetFocus(540,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + IsEmpty(Container(300).ListItem.Property(widget.3)) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.3))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="530" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">library://video/tvshows/titles.xml/</content>
		</control>
	</include>
	<include name="skinshortcuts-template-win10widget.4">
		<include condition="StringCompare(System.ProfileName,Master user)">skinshortcuts-template-win10widget.4-Master user</include>
	</include>
	<include name="skinshortcuts-template-win10widget.4-Master user">
		<control id="540" type="panel">
			<visible>StringCompare(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>HomeWin10WidgetPosBottom</include>
			<onleft>530</onleft>
			<onright>SetFocus(4444,0)</onright>
			<onright condition="Skin.HasSetting(EnhancedHome_Circular) + ![Skin.HasSetting(Win10SubmenuRight) + IntegerGreaterThan(Container(4445).NumItems,0)]">Control.Move(300,1)</onright>
			<onright condition="IsEmpty(Container(300).ListItem.Property(widget.2))">SetFocus(4444,0)</onright>
			<include>HomeWin10WidgetLayout</include>
			<include content="HomeWin10WidgetLayoutSquare" name="HomeWin10WidgetLayoutSquare">
				<param name="widgetid" value="540" />
				<param name="widgetLabelVisibility" value="WidgetTagOverlayAuto" />
			</include>
			<content target="videos">library://video/tvshows/titles.xml/</content>
		</control>
	</include>
</includes>
